death_color <- "black"
####------------------ Data ------------------
df <- coronavirus %>%
# dplyr::filter(date == max(date)) %>%
dplyr::group_by(Country.Region, type) %>%
dplyr::summarise(total = sum(cases)) %>%
tidyr::pivot_wider(names_from =  type,
values_from = total) %>%
dplyr::mutate(unrecovered = confirmed - ifelse(is.na(recovered), 0, recovered) - ifelse(is.na(death), 0, death)) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
dplyr::mutate(country = dplyr::if_else(Country.Region == "United Arab Emirates", "UAE", Country.Region)) %>%
dplyr::mutate(country = dplyr::if_else(country == "Mainland China", "China", country)) %>%
dplyr::mutate(country = dplyr::if_else(country == "North Macedonia", "N.Macedonia", country)) %>%
dplyr::mutate(country = trimws(country)) %>%
dplyr::mutate(country = factor(country, levels = country))
knitr::kable(coronavirus %>%
dplyr::group_by(Country.Region, type) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(- confirmed) %>%
dplyr::filter(confirmed >= 25) %>%
dplyr::select(Страна = Country.Region, confirmed, death, recovered) %>%
dplyr::mutate("Новые случаи" = confirmed - sum(death, recovered),
"Доля выздоровевших" = recovered/confirmed*100,
"Доля умерших" = death / confirmed*100)%>%
dplyr::  rename(.,Заболевшие = confirmed, Выздоровевшие = recovered,  Умершие= death), digits = 2)
reg_rf2 <- read_csv("reg_rf2.csv")
library(readr)
reg_rf2 <- read_csv("reg_rf2.csv")
library(httr)
library(jsonlite)
library(xml2)
library(rvest)
library(tidyr)
library(tibble)
library(dplyr)
library(ggplot2)
library(XML)
library(forcats)
library(tidytext)
library(knitr)
library(readr)
library(plotly)
library(flexdashboard)
rf_4 <- read_csv("rf_4.csv")
reg_rf2
knitr::kable(reg_rf2%>%
# pivot_wider(names_from = события, values_from = значения) %>%
dplyr::mutate("Доля выздоровевших" = Выздоровевших/Заболело*100,
"Доля умерших" = Умерло/Заболело*100), digits = 2)
#------------------ Packages ------------------
library(flexdashboard)
#checks if there is data update on the Github version
#coronavirus::update_datasets(silence = TRUE)
setwd("~/Desktop/ДЗ. г. Москва/Статистика/COVID-19")
## Получаем данные по миру
library(coronavirus)
#data(coronavirus)
##Локальная загрузка
load(file = "coronavirus.rda")
### Пакеты
library(httr)
library(jsonlite)
library(xml2)
library(rvest)
library(tidyr)
library(tibble)
library(dplyr)
library(ggplot2)
library(XML)
library(forcats)
library(tidytext)
library(knitr)
library(readr)
library(plotly)
library(flexdashboard)
covid_rf <- read_csv("covid_rf.csv")
rf_4 <- read_csv("rf_4.csv")
reg_rf2 <- read_csv("reg_rf2.csv")
nas_rf <- read_csv("nas_rf.csv")
`%>%` <- magrittr::`%>%`
#------------------ Parameters ------------------
# https://www.w3.org/TR/css-color-3/#svg-color
confirmed_color <- "#283C72"
active_color <- "#C0232C"
recovered_color <- "forestgreen"
death_color <- "black"
####------------------ Data ------------------
df <- coronavirus %>%
dplyr::group_by(Country.Region, type) %>%
dplyr::summarise(total = sum(cases)) %>%
tidyr::pivot_wider(names_from =  type,
values_from = total) %>%
dplyr::mutate(unrecovered = confirmed - ifelse(is.na(recovered), 0, recovered) - ifelse(is.na(death), 0, death)) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
dplyr::mutate(country = dplyr::if_else(Country.Region == "United Arab Emirates", "UAE", Country.Region)) %>%
dplyr::mutate(country = dplyr::if_else(country == "Mainland China", "China", country)) %>%
dplyr::mutate(country = dplyr::if_else(country == "North Macedonia", "N.Macedonia", country)) %>%
dplyr::mutate(country = trimws(country)) %>%
dplyr::mutate(country = factor(country, levels = country))
knitr::kable(reg_rf2%>%
# pivot_wider(names_from = события, values_from = значения) %>%
dplyr::mutate("Доля выздоровевших" = Выздоровевших/Заболело*100,
"Доля умерших" = Умерло/Заболело*100,
Прирост = (Заболело - Новые)/ Новые * 100), digits = 2)
reg_rf2 %>%
filter(Новые != 0) %>%
mutate(Прирост = (Заболело - Новые)/ Новые * 100) %>%
top_n(15, wt = Прирост) %>%
plot_ly(x = ~ Регион, y = ~ Прирост) %>%
add_column() %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
reg_rf2 %>%
filter(Новые != 0) %>%
mutate(Прирост = (Заболело - Новые)/ Новые * 100) %>%
top_n(15, wt = Прирост) %>%
plot_ly(x = ~ Регион, y = ~ Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост))
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
reg_rf2 %>%
filter(Новые != 0) %>%
mutate(Прирост = (Заболело - Новые)/ Новые * 100) %>%
top_n(15, wt = Прирост) %>%
plot_ly(x = ~ Регион, y = ~ Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
reg_rf2 %>%
filter(Новые != 0) %>%
mutate(Прирост = (Заболело - Новые)/ Новые * 100) %>%
top_n(15, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
reg_rf2 %>%
filter(Новые != 0) %>%
mutate(Прирост = (Заболело - Новые)/ Новые * 100) %>%
top_n(25, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
knitr::kable(left_join(reg_rf2, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активны / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000) %>%
arrange(desc(Заболеваймость)), digits = 2)
knitr::kable(left_join(reg_rf2, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активны / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000) %>%
arrange(desc(Заболеваемость)), digits = 2)
left_join(reg_rf2, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активны / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000)  %>%
top_n(10, wt = Умерших) %>%
mutate(Регион = fct_reorder(Регион,Умерших )) %>%
plot_ly(x = ~ Регион, y = ~ Умерших) %>%
layout(barmode = 'stack',
title = "Смертность на 100000 по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
left_join(reg_rf2, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активны / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000)  %>%
top_n(10, wt = Умерших) %>%
mutate(Регион = fct_reorder(Регион,Умерших )) %>%
plot_ly(x = ~ Регион, y = ~ Умерших, color ="black") %>%
layout(barmode = 'stack',
title = "Смертность на 100000 по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
left_join(reg_rf2, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активны / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000)  %>%
top_n(10, wt = Умерших) %>%
mutate(Регион = fct_reorder(Регион,Умерших )) %>%
plot_ly(x = ~ Регион, y = ~ Умерших) %>%
marker = color ="black" %>%
layout(barmode = 'stack',
title = "Смертность на 100000 по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
left_join(reg_rf2, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активны / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000)  %>%
top_n(10, wt = Умерших) %>%
mutate(Регион = fct_reorder(Регион,Умерших )) %>%
plot_ly(x = ~ Регион, y = ~ Умерших) %>%
marker = color ="black",
left_join(reg_rf2, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активны / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000)  %>%
top_n(10, wt = Умерших) %>%
mutate(Регион = fct_reorder(Регион,Умерших )) %>%
plot_ly(x = ~ Регион, y = ~ Умерших, marker = color ="black") %>%
left_join(reg_rf2, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активны / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000)  %>%
top_n(10, wt = Умерших) %>%
mutate(Регион = fct_reorder(Регион,Умерших )) %>%
plot_ly(x = ~ Регион, y = ~ Умерших, marker = list(color ="black")) %>%
layout(barmode = 'stack',
title = "Смертность на 100000 по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
reg_rf2 %>%
filter(Новые != 0) %>%
mutate(Прирост = (Заболело - Новые)/ Новые * 100) %>%
top_n(25, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост,
marker = list(color = 'red')) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
reg_rf2 %>%
filter(Новые != 0) %>%
mutate(Прирост = (Заболело - Новые)/ Новые * 100) %>%
top_n(15, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост,
marker = list(color = 'red')) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
reg_rf2 %>%
filter(Новые != 0) %>%
mutate(Прирост = (Заболело - Новые)/ Новые * 100) %>%
top_n(15, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост,
marker = list(color = 'red')) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = "",
# type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
reg_rf2 %>%
filter(Новые != 0) %>%
mutate(Прирост = (Заболело - Новые)/ Новые * 100) %>%
top_n(15, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост,
marker = list(color = 'red')) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = "")
# type = "log"),
xaxis = list(title = ""),
reg_rf2 %>%
filter(Новые != 0) %>%
mutate(Прирост = (Заболело - Новые)/ Новые * 100) %>%
top_n(15, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост,
marker = list(color = 'red')) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = "",
type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
reg_rf2 %>%
filter(Новые != 0) %>%
mutate(Прирост = (Заболело - Новые)/ Новые * 100) %>%
top_n(15, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост,
marker = list(color = 'red')) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = ""),
# type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
#------------------ Packages ------------------
library(flexdashboard)
#checks if there is data update on the Github version
#coronavirus::update_datasets(silence = TRUE)
setwd("~/Desktop/ДЗ. г. Москва/Статистика/COVID-19")
## Получаем данные по миру
library(coronavirus)
#data(coronavirus)
##Локальная загрузка
load(file = "coronavirus.rda")
### Пакеты
library(httr)
library(jsonlite)
library(xml2)
library(rvest)
library(tidyr)
library(tibble)
library(dplyr)
library(ggplot2)
library(XML)
library(forcats)
library(tidytext)
library(knitr)
library(readr)
library(plotly)
library(flexdashboard)
covid_rf <- read_csv("covid_rf.csv")
rf_4 <- read_csv("rf_4.csv")
reg_rf2 <- read_csv("reg_rf2.csv")
nas_rf <- read_csv("nas_rf.csv")
reg_rf3 <- read_csv("reg_rf3.csv")
`%>%` <- magrittr::`%>%`
#------------------ Parameters ------------------
# https://www.w3.org/TR/css-color-3/#svg-color
confirmed_color <- "#283C72"
active_color <- "#C0232C"
recovered_color <- "forestgreen"
death_color <- "black"
####------------------ Data ------------------
df <- coronavirus %>%
dplyr::group_by(Country.Region, type) %>%
dplyr::summarise(total = sum(cases)) %>%
tidyr::pivot_wider(names_from =  type,
values_from = total) %>%
dplyr::mutate(unrecovered = confirmed - ifelse(is.na(recovered), 0, recovered) - ifelse(is.na(death), 0, death)) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
dplyr::mutate(country = dplyr::if_else(Country.Region == "United Arab Emirates", "UAE", Country.Region)) %>%
dplyr::mutate(country = dplyr::if_else(country == "Mainland China", "China", country)) %>%
dplyr::mutate(country = dplyr::if_else(country == "North Macedonia", "N.Macedonia", country)) %>%
dplyr::mutate(country = trimws(country)) %>%
dplyr::mutate(country = factor(country, levels = country))
left_join(reg_rf3, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активны / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000)  %>%
top_n(10, wt = Умерших) %>%
mutate(Регион = fct_reorder(Регион,Умерших )) %>%
plot_ly(x = ~ Регион, y = ~ Умерших, marker = list(color ="black")) %>%
layout(barmode = 'stack',
title = "Смертность на 100000 по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
left_join(reg_rf3, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активных / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000)  %>%
top_n(10, wt = Умерших) %>%
mutate(Регион = fct_reorder(Регион,Умерших )) %>%
plot_ly(x = ~ Регион, y = ~ Умерших, marker = list(color ="black")) %>%
layout(barmode = 'stack',
title = "Смертность на 100000 по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
knitr::kable(left_join(reg_rf2, reg_rf3, c("Регион")) %>%
select(Регион, Новые.x, Новые.y) %>%
filter(Новые.x != 0) %>%
transmute(Регион, Прирост = (Новые.y - Новые.x)/ Новые.x * 100) %>%
arrange(desc(Прирост))), digits = 2)
knitr::kable(left_join(reg_rf2, reg_rf3, c("Регион")) %>%
select(Регион, Новые.x, Новые.y) %>%
filter(Новые.x != 0) %>%
transmute(Регион, Прирост = (Новые.y - Новые.x)/ Новые.x * 100) %>%
arrange(desc(Прирост)), digits = 2)
left_join(reg_rf2, reg_rf3, c("Регион")) %>%
select(Регион, Новые.x, Новые.y) %>%
filter(Новые.x != 0) %>%
transmute(Регион, Прирост = (Новые.y - Новые.x)/ Новые.x * 100) %>%
arrange(desc(Прирост)) %>%
top_n(15, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост,
marker = list(color = 'red')) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = ""),
# type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
left_join(reg_rf2, reg_rf3, c("Регион")) %>%
select(Регион, Новые.x, Новые.y) %>%
filter(Новые.x != 0) %>%
transmute(Регион, Прирост = (Новые.y - Новые.x)/ Новые.x * 100) %>%
arrange(desc(Прирост)) %>%
#top_n(15, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост,
marker = list(color = 'red')) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = ""),
# type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
left_join(reg_rf2, reg_rf3, c("Регион")) %>%
select(Регион, Новые.x, Новые.y) %>%
filter(Новые.x != 0) %>%
transmute(Регион, Прирост = (Новые.y - Новые.x)/ Новые.x * 100) %>%
arrange(desc(Прирост)) %>%
#top_n(15, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост,
marker = list(color = 'red')) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = "",
type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
left_join(reg_rf2, reg_rf3, c("Регион")) %>%
select(Регион, Новые.x, Новые.y) %>%
filter(Новые.x != 0) %>%
transmute(Регион, Прирост = (Новые.y - Новые.x)/ Новые.x * 100) %>%
arrange(desc(Прирост)) %>%
#top_n(15, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост,
marker = list(color = 'red')) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = ""),
#type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
knitr::kable(left_join(reg_rf3, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активны / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000) %>%
arrange(desc(Заболеваемость)), digits = 2)
knitr::kable(left_join(reg_rf3, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население * 100000,
Активных  =   Активных / Население * 100000,
Выздоровевших =  Выздоровевших/Население * 100000,
Умерших = Умерло / Население * 100000) %>%
arrange(desc(Заболеваемость)), digits = 2)
left_join(reg_rf3, nas_rf, c("Регион" = "Субъект"))
left_join(reg_rf3, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население)
left_join(reg_rf3, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население*100000)
### График plotly
left_join(reg_rf3, nas_rf, c("Регион" = "Субъект")) %>%
transmute(Регион, Заболеваемость = Заболело / Население*100000) %>%
select (Регион,  Заболеваемость) %>%
top_n(10, wt =  Заболеваемость) %>%
mutate(Регион = fct_reorder(Регион, Заболеваемость	)) %>%
plot_ly(x = ~ Регион, y = ~  Заболеваемость) %>%
add_column() %>%
layout(barmode = 'stack',
title = "Заболеваемость по регионам РФ",
yaxis = list(title = "", type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
left_join(reg_rf3, reg_rf2, c("Регион")) %>%
select(Регион, Новые.x, Новые.y) %>%
filter(Новые.x != 0) %>%
transmute(Регион, Прирост = (Новые.y - Новые.x)/ Новые.x * 100) %>%
arrange(desc(Прирост)) %>%
#top_n(15, wt = Прирост) %>%
mutate(Регион = fct_reorder(Регион, Прирост)) %>%
plot_ly(x = ~ Регион, y = ~ Прирост,
marker = list(color = 'red')) %>%
layout(barmode = 'stack',
title = "Прирост по регионам РФ",
yaxis = list(title = ""),
#type = "log"),
xaxis = list(title = ""),
hovermode = "compare")
